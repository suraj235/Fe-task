{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/FE%20Task/product-card/lib/encryption.ts"],"sourcesContent":["import crypto from 'crypto';\r\nconst ALGORITHM = 'aes-256-gcm';\r\nconst IV_LENGTH = 16;\r\nconst AUTH_TAG_LENGTH = 16;\r\nconst ENCRYPTION_KEY = process.env.ENCRYPTION_KEY || '';\r\n\r\nif (!ENCRYPTION_KEY) {\r\n  throw new Error('ENCRYPTION_KEY environment variable is not set');\r\n}\r\n\r\n// Derive a 32-byte key from the environment variable\r\nconst getKey = (): Buffer => {\r\n  return crypto.scryptSync(ENCRYPTION_KEY, 'salt', 32);\r\n};\r\n\r\nexport interface EncryptedData {\r\n  encrypted: string;\r\n  iv: string;\r\n  authTag: string;\r\n}\r\n\r\n// Encrypts data using AES-256-GCM\r\nexport function encrypt(text: string): EncryptedData {\r\n  const iv = crypto.randomBytes(IV_LENGTH);\r\n  const key = getKey();\r\n  \r\n  const cipher = crypto.createCipheriv(ALGORITHM, key, iv);\r\n  \r\n  let encrypted = cipher.update(text, 'utf8', 'base64');\r\n  encrypted += cipher.final('base64');\r\n  \r\n  const authTag = cipher.getAuthTag();\r\n  \r\n  return {\r\n    encrypted,\r\n    iv: iv.toString('base64'),\r\n    authTag: authTag.toString('base64'),\r\n  };\r\n}\r\n\r\n// Decrypts data using AES-256-GCM\r\nexport function decrypt(encryptedData: EncryptedData): string {\r\n  const key = getKey();\r\n  const iv = Buffer.from(encryptedData.iv, 'base64');\r\n  const authTag = Buffer.from(encryptedData.authTag, 'base64');\r\n  \r\n  const decipher = crypto.createDecipheriv(ALGORITHM, key, iv);\r\n  decipher.setAuthTag(authTag);\r\n  \r\n  let decrypted = decipher.update(encryptedData.encrypted, 'base64', 'utf8');\r\n  decrypted += decipher.final('utf8');\r\n  \r\n  return decrypted;\r\n}"],"names":[],"mappings":";;;;;;AAAA;;AACA,MAAM,YAAY;AAClB,MAAM,YAAY;AAClB,MAAM,kBAAkB;AACxB,MAAM,iBAAiB,QAAQ,GAAG,CAAC,cAAc,IAAI;AAErD,IAAI,CAAC,gBAAgB;IACnB,MAAM,IAAI,MAAM;AAClB;AAEA,qDAAqD;AACrD,MAAM,SAAS;IACb,OAAO,gHAAM,CAAC,UAAU,CAAC,gBAAgB,QAAQ;AACnD;AASO,SAAS,QAAQ,IAAY;IAClC,MAAM,KAAK,gHAAM,CAAC,WAAW,CAAC;IAC9B,MAAM,MAAM;IAEZ,MAAM,SAAS,gHAAM,CAAC,cAAc,CAAC,WAAW,KAAK;IAErD,IAAI,YAAY,OAAO,MAAM,CAAC,MAAM,QAAQ;IAC5C,aAAa,OAAO,KAAK,CAAC;IAE1B,MAAM,UAAU,OAAO,UAAU;IAEjC,OAAO;QACL;QACA,IAAI,GAAG,QAAQ,CAAC;QAChB,SAAS,QAAQ,QAAQ,CAAC;IAC5B;AACF;AAGO,SAAS,QAAQ,aAA4B;IAClD,MAAM,MAAM;IACZ,MAAM,KAAK,OAAO,IAAI,CAAC,cAAc,EAAE,EAAE;IACzC,MAAM,UAAU,OAAO,IAAI,CAAC,cAAc,OAAO,EAAE;IAEnD,MAAM,WAAW,gHAAM,CAAC,gBAAgB,CAAC,WAAW,KAAK;IACzD,SAAS,UAAU,CAAC;IAEpB,IAAI,YAAY,SAAS,MAAM,CAAC,cAAc,SAAS,EAAE,UAAU;IACnE,aAAa,SAAS,KAAK,CAAC;IAE5B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Admin/Desktop/FE%20Task/product-card/app/api/surveys/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { encrypt } from '@/lib/encryption';\r\nimport { Survey } from '@/types/survey';\r\n\r\n// **Mock sensitive survey data** This can be replaced with real data fetching logic\r\nconst mockSurveys: Survey[] = [\r\n  {\r\n    id: '1',\r\n    title: 'Patient Satisfaction Survey 2024',\r\n    timestamp: new Date('2024-01-15').toISOString(),\r\n    sensitiveData: 'Patient ID: 12345, SSN: XXX-XX-6789, Satisfaction Score: 9/10',\r\n    status: 'completed',\r\n    category: 'Healthcare',\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Annual Health Assessment',\r\n    timestamp: new Date('2024-02-20').toISOString(),\r\n    sensitiveData: 'Patient ID: 67890, DOB: 1985-03-15, Blood Type: O+',\r\n    status: 'active',\r\n    category: 'Healthcare',\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Mental Health Screening',\r\n    timestamp: new Date('2024-03-10').toISOString(),\r\n    sensitiveData: 'Patient ID: 54321, Diagnosis: Anxiety Disorder, Treatment Plan: CBT',\r\n    status: 'pending',\r\n    category: 'Mental Health',\r\n  },\r\n  {\r\n    id: '4',\r\n    title: 'Medication Adherence Study',\r\n    timestamp: new Date('2024-04-05').toISOString(),\r\n    sensitiveData: 'Patient ID: 98765, Medications: Lisinopril 10mg, Metformin 500mg',\r\n    status: 'active',\r\n    category: 'Pharmacy',\r\n  },\r\n  {\r\n    id: '5',\r\n    title: 'Post-Surgery Follow-up',\r\n    timestamp: new Date('2024-05-12').toISOString(),\r\n    sensitiveData: 'Patient ID: 11223, Surgery Date: 2024-04-01, Recovery Status: Good',\r\n    status: 'completed',\r\n    category: 'Surgery',\r\n  },\r\n  {\r\n    id: '6',\r\n    title: 'Diabetes Management Survey',\r\n    timestamp: new Date('2024-06-18').toISOString(),\r\n    sensitiveData: 'Patient ID: 33445, HbA1c: 6.8%, Insulin Type: Humalog',\r\n    status: 'active',\r\n    category: 'Endocrinology',\r\n  },\r\n];\r\n\r\nexport async function GET() {\r\n  try {\r\n    // Encrypt the entire payload\r\n    const payload = JSON.stringify(mockSurveys);\r\n    const encryptedPayload = encrypt(payload);\r\n    \r\n    return NextResponse.json({\r\n      success: true,\r\n      data: encryptedPayload,\r\n    });\r\n  } catch (error) {\r\n    console.error('Encryption error:', error);\r\n    return NextResponse.json(\r\n      { success: false, error: 'Failed to encrypt data' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAGA,oFAAoF;AACpF,MAAM,cAAwB;IAC5B;QACE,IAAI;QACJ,OAAO;QACP,WAAW,IAAI,KAAK,cAAc,WAAW;QAC7C,eAAe;QACf,QAAQ;QACR,UAAU;IACZ;IACA;QACE,IAAI;QACJ,OAAO;QACP,WAAW,IAAI,KAAK,cAAc,WAAW;QAC7C,eAAe;QACf,QAAQ;QACR,UAAU;IACZ;IACA;QACE,IAAI;QACJ,OAAO;QACP,WAAW,IAAI,KAAK,cAAc,WAAW;QAC7C,eAAe;QACf,QAAQ;QACR,UAAU;IACZ;IACA;QACE,IAAI;QACJ,OAAO;QACP,WAAW,IAAI,KAAK,cAAc,WAAW;QAC7C,eAAe;QACf,QAAQ;QACR,UAAU;IACZ;IACA;QACE,IAAI;QACJ,OAAO;QACP,WAAW,IAAI,KAAK,cAAc,WAAW;QAC7C,eAAe;QACf,QAAQ;QACR,UAAU;IACZ;IACA;QACE,IAAI;QACJ,OAAO;QACP,WAAW,IAAI,KAAK,cAAc,WAAW;QAC7C,eAAe;QACf,QAAQ;QACR,UAAU;IACZ;CACD;AAEM,eAAe;IACpB,IAAI;QACF,6BAA6B;QAC7B,MAAM,UAAU,KAAK,SAAS,CAAC;QAC/B,MAAM,mBAAmB,IAAA,8HAAO,EAAC;QAEjC,OAAO,gJAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qBAAqB;QACnC,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAAyB,GAClD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}